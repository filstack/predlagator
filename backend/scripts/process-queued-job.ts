import { getSupabase } from '../src/lib/supabase.js';
import PgBoss from 'pg-boss';
import * as dotenv from 'dotenv';

dotenv.config();

async function processQueuedJob() {
  const supabase = getSupabase();
  const campaignId = '7774267f-48c4-48b5-bbc9-96a95e4a0fd2';

  console.log('üîç –ò—â–µ–º QUEUED –¥–∂–æ–±—ã...\n');

  // –ü–æ–ª—É—á–∞–µ–º QUEUED –¥–∂–æ–±—ã
  const { data: jobs, error } = await supabase
    .from('jobs')
    .select(`
      *,
      campaign:campaigns(*),
      channel:channels(*)
    `)
    .eq('campaign_id', campaignId)
    .eq('status', 'QUEUED');

  if (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
    process.exit(1);
  }

  if (!jobs || jobs.length === 0) {
    console.log('‚ö†Ô∏è  –ù–µ—Ç QUEUED –¥–∂–æ–±–æ–≤');
    process.exit(0);
  }

  console.log(`üì® –ù–∞–π–¥–µ–Ω–æ ${jobs.length} QUEUED –¥–∂–æ–±–æ–≤:\n`);

  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∂–æ–±—ã –≤ pg-boss
  const boss = new PgBoss({
    connectionString: process.env.SUPABASE_DIRECT_URL,
    schema: 'pgboss',
    max: 5,
    ssl: { rejectUnauthorized: false },
  });

  await boss.start();

  for (const job of jobs) {
    console.log(`üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∂–æ–±–∞ –¥–ª—è @${job.channel.username}...`);

    const jobId = await boss.send('send-message', {
      jobId: job.id,
      campaignId: job.campaign.id,
      channelId: job.channel.id,
      channelUsername: job.channel.username,
      templateContent: '—Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ',
      mediaType: null,
      mediaUrl: null,
      attempt: 0
    });

    console.log(`‚úÖ Job ID: ${jobId}`);
  }

  await boss.stop();
  console.log('\n‚úÖ –í—Å–µ –¥–∂–æ–±—ã –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã!');
  process.exit(0);
}

processQueuedJob();
