import PgBoss from 'pg-boss';
import * as dotenv from 'dotenv';

// Load environment variables
dotenv.config();

async function checkPgBossTables() {
  const connectionString = process.env.SUPABASE_DIRECT_URL;

  if (!connectionString) {
    console.error('‚ùå SUPABASE_DIRECT_URL not found');
    process.exit(1);
  }

  console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—ã pg-boss...\n');

  const boss = new PgBoss({
    connectionString,
    schema: 'pgboss',
    max: 1,
    ssl: {
      rejectUnauthorized: false,
    },
    migrate: true, // –í–∫–ª—é—á–∏–º –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–ª—è —Ç–µ—Å—Ç–∞
  });

  try {
    await boss.start();
    console.log('‚úÖ pg-boss successfully started with migrate: true');
    console.log('üìä –≠—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ —Ç–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã –∏–ª–∏ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç\n');

    // –ü–æ–ø—Ä–æ–±—É–µ–º –¥–æ–±–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–¥–∞—á—É
    const jobId = await boss.send('test-queue', { test: 'data' });
    console.log('‚úÖ Test job created with ID:', jobId);

    // –ü—Ä–æ–≤–µ—Ä–∏–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ—á–µ—Ä–µ–¥–∏
    const queueSize = await boss.getQueueSize('test-queue');
    console.log('üìä Test queue size:', queueSize);

    await boss.stop();
    process.exit(0);
  } catch (error) {
    console.error('‚ùå Error:', error);
    process.exit(1);
  }
}

checkPgBossTables();
